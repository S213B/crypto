1.  Convert hex to base64                     (hex2b64.py)
2.  Fixed XOR                                 (xor2str.py)
3.  Single-byte XOR cipher                    (single_byte_xor_cipher.py)
4.  Detect single-character XOR               (detect_single_c_xor.py)
5.  Implement repeating-key XOR               (xor_encrypt.py)
6.  Break repeating-key XOR                   (rep_xor_decrypt.py)
7.  AES in ECB mode                           (aes_128_ecb.py)
8.  Detect AES in ECB mode                    (ecb_detect.py)
9.  Implement PKCS#7 padding                  (pkcs7.py)
10. Implement CBC mode                        (cbc_mode.py)
11. An ECB/CBC detection oracle               (ecb_cbc_detect.py)
12. Byte-at-a-time ECB decryption (Simple)    (byte_at_a_time_ecb_decryption.py)
13. ECB cut-and-paste
14. Byte-at-a-time ECB decryption (Harder)
15. PKCS#7 padding validation
16. CBC bitflipping attacks

Misc:
ham_dis.py     : calculate hamming distance
test_ecb_cbc.py: run ecb_cbc_detect.py 100 times to test correctness
